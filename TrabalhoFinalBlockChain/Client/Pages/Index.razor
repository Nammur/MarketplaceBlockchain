@page "/"
@using MetaMask.Blazor
@using TrabalhoFinalBlockChain.Client.Pages.Itens
@using TrabalhoFinalBlockChain.Client.Pages.Players
@using global::Players.Models
@inject HttpClient http

<PageTitle>Index</PageTitle>

<ListagemItens></ListagemItens>


@code{
    [Inject]    
    public MetaMaskService MetaMaskService { get; set; } = default!;

    [CascadingParameter]
    public IModalService Modal { get; set; }

    [Inject]
    public Player? Player { get; set; }

    private string? SelectedAddress {get; set;}

    protected override async Task OnInitializedAsync()
    {
        SelectedAddress = await MetaMaskService.GetSelectedAddress();
        //Player = new Player();
        await RecuperarPlayer(SelectedAddress);
    }

    private async Task RecuperarPlayer(string? idCarteira)
    {
        if (!string.IsNullOrEmpty(idCarteira))
        {
            Player.SetPLayer(await http.GetFromJsonAsync<Player>("api/player/RecuperarPlayer?idCarteira=" + idCarteira));

            if (string.IsNullOrEmpty(Player.IdCarteira))
            {
                ShowModalCriarConta();
            }
        }
    } 

    private void ShowModalCriarConta()
    {
        var parametros = new ModalParameters();
        parametros.Add("idCarteira", SelectedAddress);

        var options = new ModalOptions()
            {
                HideHeader = true
            };

        Modal.Show<CriarConta>("",parametros,options);
    }
}